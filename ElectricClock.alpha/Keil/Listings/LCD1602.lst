C51 COMPILER V9.60.0.0   LCD1602                                                           07/08/2022 00:48:52 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE ..\Source\LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\
                    -Listings\LCD1602.lst) TABS(2) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          /*
   2                  LCD1602相关函数
   3                  !!!Encode in ANSI!!!
   4          */
   5          
   6          
   7          #include "intrins.h"
   8          #include "LCD1602.h"
   9          #include "main.h"
  10          #include "reg51.h"
  11          
  12          #define DATA P0 //LCD1602数据输入/输出
  13          
  14          bit Moveflag;
  15          
  16          //LCD1602
  17          sbit W_R = P2^6; 
  18          sbit RS = P2^5;
  19          sbit E = P2^7;
  20          
  21          //独立按键
  22          sbit K1 = P3^2;
  23          sbit K2 = P3^3;
  24          sbit K3 = P3^4; //INT0
  25          sbit K4 = P3^5; //INT1
  26          
  27          unsigned char i = 0x30; //
  28          unsigned char j;
  29          
  30          extern bit Keyflag0;
  31          
  32          //检测繁忙
  33          unsigned char lcd1602_check_busy()
  34          {
  35   1        unsigned char ucData;
  36   1        RS = 0;
  37   1        W_R = 1;
  38   1        DelayUs(10);
  39   1        E = 0;
  40   1        DelayUs(10);
  41   1        E = 1;
  42   1        DelayUs(10);    //模式设为读取忙标志
  43   1        ucData = DATA;
  44   1        //返回“1”意味繁忙，返回“0”意味空闲
  45   1        
  46   1        return (DATA&0x80); // 1表示忙，0表示空闲
  47   1      }
  48          
  49          //写入指令
  50          void write_lcd1602_command(unsigned char com)
  51          {
  52   1        while(lcd1602_check_busy()); //空闲时执行写入命令
  53   1        
  54   1        RS = 0;
C51 COMPILER V9.60.0.0   LCD1602                                                           07/08/2022 00:48:52 PAGE 2   

  55   1        W_R = 0; //模式设为写入命令
  56   1        E = 1;   //允许写入指令
  57   1        DelayUs(10);
  58   1        
  59   1        DATA = com; //向lcd1602写入命令
  60   1        
  61   1        DelayUs(10);
  62   1        E = 0;
  63   1        DelayUs(5);
  64   1      }
  65          
  66          //从lcd1602中读取数据
  67          unsigned char read_lcd1602_data()
  68          {
  69   1        unsigned char dat;
  70   1        while(lcd1602_check_busy());
  71   1        
  72   1        RS = 1;  //选中数据寄存器
  73   1        W_R = 1; //设为读信息
  74   1        E = 1;   //允许读信息
  75   1        DelayMs(5);
  76   1        
  77   1        dat = DATA; //从lcd1602读取数据
  78   1        
  79   1        return dat; //返回读取的数据 dat
  80   1      }
  81          
  82          //读取字符
  83          unsigned char read_lcd1602_char(unsigned char hang, unsigned char lie)
  84          {
  85   1        unsigned char dat;
  86   1        
  87   1        //设定显示的位置：第1行，及列数
  88   1        if(hang == 0)
  89   1        {
  90   2          write_lcd1602_command(0x80 + lie);
  91   2        }
  92   1        //设定显示的位置：第2行，及列数
  93   1        else if(hang == 1)
  94   1        {
  95   2          write_lcd1602_command(0xc0 + lie);
  96   2        }
  97   1        
  98   1        //从lcd1602读取数据
  99   1        dat = read_lcd1602_data();
 100   1        
 101   1        return dat; //返回读取的字符dat
 102   1      }
 103          
 104          //写入数据
 105          void write_lcd1602_data(unsigned char dat)
 106          {
 107   1        while(lcd1602_check_busy()); //空闲时执行写入命令
 108   1        
 109   1        RS = 1;
 110   1        W_R = 0;
 111   1        E = 1;
 112   1        DelayUs(10);
 113   1        
 114   1        DATA = dat; //输入数据
 115   1        
 116   1        DelayUs(10);
C51 COMPILER V9.60.0.0   LCD1602                                                           07/08/2022 00:48:52 PAGE 3   

 117   1        E = 0;
 118   1        DelayUs(10);
 119   1      }
 120          
 121          //写入字符              行          列        字符
 122          void lcd1602_write_char(unsigned char Hang, unsigned char Lie, unsigned char n)
 123          {
 124   1        //设定显示的位置：第1行，及列数
 125   1        if(Hang == 0)
 126   1        {
 127   2          write_lcd1602_command(0x80 + Lie); //设定显示的位置
 128   2        }
 129   1        //设定显示的位置：第2行，及列数
 130   1        else
 131   1        {
 132   2          write_lcd1602_command(0xC0 + Lie);
 133   2        }
 134   1        
 135   1        //向lcd1602写入字符
 136   1        write_lcd1602_data(n); //写入字符'n'的ASCII
 137   1        
 138   1      }
 139          
 140          //写入字符串
 141          void lcd1602_write_string(unsigned char Hang1, unsigned char Lie1, unsigned char *s)
 142          {
 143   1        //设定显示的位置：第1行，及列数
 144   1        if(Hang1 == 0)
 145   1        {
 146   2          write_lcd1602_command(0x80 + Lie1); 
 147   2        }
 148   1        //设定显示的位置：第2行，及列数
 149   1        else
 150   1        {
 151   2          write_lcd1602_command(0xC0 + Lie1);
 152   2        }
 153   1        
 154   1        //向lcd1602输入字符串
 155   1        while(*s)
 156   1        {
 157   2          write_lcd1602_data(*s);
 158   2          s++;
 159   2        }
 160   1        
 161   1      }
 162          
 163          //清屏
 164          void lcd1602_clear()
 165          {
 166   1        write_lcd1602_command(0x01);
 167   1        DelayMs(5);
 168   1      }
 169          
 170          //按要求初始化
 171          void lcd1602_init()
 172          {
 173   1        write_lcd1602_command(0x38); //功能：8位总线、2行显示、5*7点阵
 174   1        DelayMs(5);
 175   1        write_lcd1602_command(0x08); //功能：显示屏关显示、不显示光标、光标闪烁
 176   1        write_lcd1602_command(0x01); //清屏
 177   1        write_lcd1602_command(0x06); //功能：输入数据时光标右移、输入字符时显示屏全部显示不移动
 178   1        DelayMs(5);
C51 COMPILER V9.60.0.0   LCD1602                                                           07/08/2022 00:48:52 PAGE 4   

 179   1        write_lcd1602_command(0x0c); //显示屏开显示、不显示光标、光标闪烁
 180   1      }
 181          
 182          //闹钟设置初始化命令
 183          void lcd1602_alarm_init()
 184          {
 185   1        write_lcd1602_command(0x0f); //显示屏开显示、显示光标、光标闪烁
 186   1      } 
 187          
 188          //光标移动指令
 189          void lcd1602_course_move()
 190          {
 191   1        //光标左移
 192   1        if(K1 == 0)
 193   1        {
 194   2          DelayMs(10);
 195   2          if(K1 == 0)
 196   2          {
 197   3            while(K1 == 0);
 198   3                        
 199   3            j++;
 200   3            
 201   3            //跳过':'
 202   3            if(j == 2)
 203   3            {
 204   4              write_lcd1602_command(0x10);
 205   4            }     
 206   3            else if(j == 4)
 207   3            {
 208   4              write_lcd1602_command(0x10);
 209   4            }
 210   3            
 211   3            //将光标跳到第1行最右
 212   3            else if(j == 6)
 213   3            {
 214   4              write_lcd1602_command(0x02); //光标归位
 215   4              DelayMs(5);
 216   4              
 217   4              write_lcd1602_command(0x14);
 218   4              DelayUs(5);
 219   4              write_lcd1602_command(0x14);
 220   4              DelayUs(5);
 221   4              write_lcd1602_command(0x14);
 222   4              DelayUs(5);
 223   4              write_lcd1602_command(0x14);
 224   4              DelayUs(5);
 225   4              write_lcd1602_command(0x14);
 226   4              DelayUs(5);
 227   4              write_lcd1602_command(0x14);
 228   4              DelayUs(5);
 229   4              write_lcd1602_command(0x14);
 230   4              DelayUs(5);
 231   4              write_lcd1602_command(0x14);
 232   4              DelayUs(5);
 233   4              write_lcd1602_command(0x14);
 234   4              DelayUs(5);
 235   4              write_lcd1602_command(0x14);
 236   4              DelayUs(5);
 237   4              write_lcd1602_command(0x14);
 238   4              DelayUs(5);
 239   4              write_lcd1602_command(0x14);
 240   4              DelayUs(5);
C51 COMPILER V9.60.0.0   LCD1602                                                           07/08/2022 00:48:52 PAGE 5   

 241   4              write_lcd1602_command(0x14);
 242   4              DelayUs(5);
 243   4              write_lcd1602_command(0x14);
 244   4              DelayUs(5);
 245   4              write_lcd1602_command(0x14);
 246   4              DelayUs(5);
 247   4              write_lcd1602_command(0x14);
 248   4              DelayUs(5);
 249   4              //write_lcd1602_command(0x14);
 250   4              //DelayUs(5);
 251   4              //write_lcd1602_command(0x14);
 252   4              //DelayUs(5);
 253   4              //write_lcd1602_command(0x14);
 254   4              
 255   4            }
 256   3            
 257   3            else if(j == 8)
 258   3            {
 259   4              write_lcd1602_command(0x10);
 260   4            }
 261   3            else if(j == 10)
 262   3            {
 263   4              write_lcd1602_command(0x10);
 264   4            }
 265   3            
 266   3            else if(j == 14)
 267   3            {
 268   4              j = 0;
 269   4              
 270   4              lcd1602_write_char(1, 15, '0');
 271   4            }
 272   3            
 273   3            if(K3 == 0)
 274   3            {
 275   4              DelayMs(5);
 276   4              if(K3 == 0)
 277   4              {
 278   5                while(K3 == 0);
 279   5                
 280   5                j = 0;
 281   5              }
 282   4            }
 283   3            
 284   3            if(Keyflag0 == 0)
 285   3            {
 286   4              j = 0;
 287   4            }
 288   3            
 289   3            Moveflag = 1; //向改变lcd1602中发送flag，清零i
 290   3            write_lcd1602_command(0x10); //左移
 291   3          } 
 292   2        }
 293   1      }
 294          
 295          //改变lcd1602屏幕数字
 296          void lcd1602_change_number()
 297          { 
 298   1        //按下K2当前位置数字 +1
 299   1        if(K2 == 0)
 300   1        {
 301   2          DelayMs(10);
 302   2          if(K2 == 0)
C51 COMPILER V9.60.0.0   LCD1602                                                           07/08/2022 00:48:52 PAGE 6   

 303   2          {
 304   3            while(K2 == 0);
 305   3                
 306   3            write_lcd1602_data(i); //向lcd1602中写入 i 的值  
 307   3            write_lcd1602_command(0x10); //写入后左移1位
 308   3            
 309   3            i++;
 310   3          }
 311   2        }
 312   1          
 313   1        //按下K1 光标左移时i重置
 314   1        if(Moveflag == 1)
 315   1        {
 316   2          i = 0x30;
 317   2          Moveflag = 0;
 318   2        }
 319   1        
 320   1        //i=10时i重置
 321   1        else if(i == 0x3a)
 322   1        {
 323   2          i = 0x30;
 324   2        }
 325   1        
 326   1        //按下K4 退出屏幕三时重置i
 327   1        else if(K4 == 0)
 328   1        {
 329   2          i = 0x30;
 330   2        }
 331   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    620    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
